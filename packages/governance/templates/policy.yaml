# governance/policy.yaml
# Hard gates & light hints for Azure + GitHub.
# Each service MCP calls governance.evaluate("<service>.<tool>", args) BEFORE executing.

azure:
  # ---------- Resource Groups ----------
  create_resource_group:
    # BAN names, either exact or substring:
    deny_names: [cookies, foo, bar]
    deny_contains: [cookies, foo, bar]       # "rg-cookies" will now be denied
    # Optionally: deny_regex: "cookies|test|bad"

    # Enforce naming + regions:
    name_regex: "^(rg-[a-z0-9-]{3,40})$"
    allowed_regions: [usgovvirginia, usgovarizona]

    # Require tags
    require_tags: [owner, env]

    # Suggestions (rendered with context: upn, alias, region, etc.)
    suggest_name: "rg-{{alias}}-sbx"
    suggest_region: "usgovvirginia"
    suggest_tags:
      owner: "{{upn}}"
      env: "dev"

    # NIST control references that explain WHY:
    controls: ["CM-2", "CM-6"]   # configuration mgmt baseline & compliance checks

  # ---------- App Service Plan ----------
  create_app_service_plan:
    # Constrain SKUs
    sku_allowlist: [P1, P2]

  # ---------- Web App ----------
  create_web_app:
    # Constrain stacks you support
    runtime_allowlist:
      - "NODE|20-lts"
      - "DOTNET|8.0"

  # ---------- Static Web App (optional) ----------
  create_static_web_app:
    sku_allowlist: [Free, Standard, StandardPlus]

  create_key_vault:
    sku_allowlist: [standard, premium]
    require_rbac_true: true
    disallow_public_network_access_enabled: true

  create_storage_account:
    name_regex: "^[a-z0-9]{3,24}$"
    sku_allowlist: [Standard_LRS, Standard_GRS, Standard_RAGRS, Standard_ZRS, Premium_LRS]
    kind_allowlist: [StorageV2, BlobStorage, BlockBlobStorage, FileStorage, Storage]
    require_https_only_true: true

  create_virtual_network:
    name_regex: "^(vnet-[a-z0-9-]{3,40})$"
    allowed_regions: [usgovvirginia, usgovarizona]
    require_tags: [owner, env]
    require_ddos_plan: true   # warn

  create_subnet:
    name_regex: "^(snet-[a-z0-9-]{3,40})$"
    require_nsg: true
    require_private_endpoint_policies_disabled: true

  create_private_endpoint:
    require_dns_zone_link: true
    # optional hint: match target resource types
    target_regexes:
      - "providers/Microsoft.KeyVault/vaults"
      - "providers/Microsoft.Storage/storageAccounts"
      - "providers/Microsoft.Web/sites"

  create_log_analytics_workspace:
    allowed_regions: [usgovvirginia, usgovarizona]
    retention_days_allowlist: [30, 60, 90, 180, 365, 730]

  create_public_ip:
    sku_allowlist: ["Standard"]
    allocation_allowlist: ["Static"]
    version_allowlist: ["IPv4"]


github:
  # ---------- Create repo ----------
  create_repo:
    deny_names: [foo, bar, test, temp]
    name_regex: "^[a-z0-9-]{2,100}$"
    visibility_allowlist: [private, internal]
    suggest_name: "{{alias}}-{{project}}"
    suggest_visibility: "private"
    suggest_description: "Mission repo for {{alias}}"

  # ---------- Create repo from template ----------
  create_repo_from_template:
    deny_names: [foo, bar, test, temp]
    new_name_regex: "^[a-z0-9-]{2,100}$"
    visibility_allowlist: [private, internal]
    suggest_visibility: "private"

  # ---------- Branch protection baseline ----------
  protect_branch:
    enforce_admins_required: true
    code_owner_reviews_required: true
    min_approvals_not_zero: true
    block_force_pushes: true
    suggest:
      - title: "Branch Protection Baseline"
        text: "Require ≥1 approval, CODEOWNERS reviews, block force-pushes, enforce for admins."

  # ---------- Repo security toggles ----------
  enable_repo_security:
    require_secret_scanning: true
    require_push_protection: true
    require_dependabot_security_updates: true
    suggest:
      - title: "Security Baseline"
        text: "Enable Secret Scanning, Push Protection, and Dependabot security updates."

  # ---------- CODEOWNERS present ----------
  add_codeowners:
    require_entries_present: true
    suggest:
      - title: "CODEOWNERS"
        text: "Add CODEOWNERS in .github/CODEOWNERS to enforce team review."

  # ---------- Minimal ruleset ----------
  create_ruleset_basic:
    require_approvals_not_zero: true
    require_codeowner_reviews_true: true
    block_force_pushes_true: true
    suggest:
      - title: "Repository Ruleset"
        text: "Create an active ruleset on default branch with ≥1 approval, CODEOWNERS, and block force-push."